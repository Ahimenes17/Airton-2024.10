import cv2
import numpy as np

# Подключаем камеру
cap = cv2.VideoCapture(0)

# Проверяем, подключена ли камера
if not cap.isOpened():
print("Ошибка: камера не подключена")
exit()

while True:
# Читаем кадр из видеопотока
ret, frame = cap.read()

# Преобразуем кадр в grayscale
gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

# Применяем алгоритм обнаружения объектов
edges = cv2.Canny(gray, 50, 150)

# Находим контуры объектов
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Обрабатываем контуры объектов
for contour in contours:
# Находим площадь контура
area = cv2.contourArea(contour)

# Если площадь контура больше 1000, то это препятствие
if area > 1000:
# Рисуем контур препятствия
cv2.drawContours(frame, [contour], 0, (0, 255, 0), 2)

# Находим ширину препятствия в пикселях
width = cv2.boundingRect(contour)[2]

# Находим фокусное расстояние камеры
focal_length = 500 # мм

# Находим ширину препятствия в метрах
width_in_meters = 0.5 # м

# Находим количество пикселей на метр
pixels_per_meter = 100 # пикселей/м

# Вычисляем расстояние до препятствия
distance = (width \* focal_length) / (width_in_meters \* pixels_per_meter)

# Выводим расстояние до препятствия
cv2.putText(frame, f"Расстояние : {distance:.2f} м", (10, 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)

# Выводим обработанный кадр
cv2.imshow('frame', frame)

# Если нажата клавиша 'q', то выходим из цикла
if cv2.waitKey(1) & 0xFF == ord('q'):
break

# Освобождаем ресурсы
cap.release()
cv2.destroyAllWindows()