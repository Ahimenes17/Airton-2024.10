# Нейронка на основе модели CNN, определяет, находится ли перед дроном препятствие или это всё дождь\пыль\снег и так далее

import numpy as np
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

# Load the training data
train_data = np.load('train_data.npy')

# Create a CNN model
model = Sequential()
model.add(Conv2D(32, (3, 3), activation='relu', input_shape=(224, 224, 3)))
model.add(MaxPooling2D((2, 2)))
model.add(Conv2D(64, (3, 3), activation='relu'))
model.add(MaxPooling2D((2, 2)))
model.add(Conv2D(128, (3, 3), activation='relu'))
model.add(MaxPooling2D((2, 2)))
model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_data, epochs=10, batch_size=32)

# Evaluate the model
loss, accuracy = model.evaluate(train_data)
print(f'Loss: {loss:.3f}, Accuracy: {accuracy:.3f}')

# Use the model to classify the detected contours
contours = np.load('contours.npy')
predictions = model.predict(contours)
print(predictions)